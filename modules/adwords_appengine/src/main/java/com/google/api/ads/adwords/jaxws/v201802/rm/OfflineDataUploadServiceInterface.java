// Copyright 2018 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package com.google.api.ads.adwords.jaxws.v201802.rm;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.google.api.ads.adwords.jaxws.v201802.cm.Selector;


/**
 * 
 *       Service to manage Offline Data uploads.
 *       
 *       <p class="note"><b>Note:</b> This service is available only on a whitelist basis.
 *     
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.1
 * 
 */
@WebService(name = "OfflineDataUploadServiceInterface", targetNamespace = "https://adwords.google.com/api/adwords/rm/v201802")
@XmlSeeAlso({
    com.google.api.ads.adwords.jaxws.v201802.cm.ObjectFactory.class,
    com.google.api.ads.adwords.jaxws.v201802.rm.ObjectFactory.class
})
public interface OfflineDataUploadServiceInterface {


    /**
     * 
     *         Returns a list of OfflineDataUpload objects that match the criteria specified in the selector.
     *         
     *         <p><b>Note:</b> If an upload fails after processing, reason will be reported in {@link
     *         OfflineDataUpload#failureReason}.
     *         
     *         @throws {@link ApiException} if problems occurred while retrieving results.
     *       
     * 
     * @param serviceSelector
     * @return
     *     returns com.google.api.ads.adwords.jaxws.v201802.rm.OfflineDataUploadPage
     * @throws ApiException
     */
    @WebMethod
    @WebResult(name = "rval", targetNamespace = "https://adwords.google.com/api/adwords/rm/v201802")
    @RequestWrapper(localName = "get", targetNamespace = "https://adwords.google.com/api/adwords/rm/v201802", className = "com.google.api.ads.adwords.jaxws.v201802.rm.OfflineDataUploadServiceInterfaceget")
    @ResponseWrapper(localName = "getResponse", targetNamespace = "https://adwords.google.com/api/adwords/rm/v201802", className = "com.google.api.ads.adwords.jaxws.v201802.rm.OfflineDataUploadServiceInterfacegetResponse")
    public OfflineDataUploadPage get(
        @WebParam(name = "serviceSelector", targetNamespace = "https://adwords.google.com/api/adwords/rm/v201802")
        Selector serviceSelector)
        throws ApiException
    ;

    /**
     * 
     *         Applies a list of mutate operations (i.e. add, set) to offline data upload:
     *         
     *         <p>Add - uploads offline data for each entry in operations. Some operations can fail for upload
     *         level errors like invalid {@code UploadMetadata}. Check {@code OfflineDataUploadReturnValue}
     *         for partial failure list.
     *         
     *         <p>Set - updates the upload result for each upload. It is for internal use only.
     *         
     *         <p><b>Note:</b> For AdWords API, one ADD request can have at most 2000 operations.
     *         
     *         <p><b>Note:</b> Add operation might possibly succeed even with errors in {@code OfflineData}.
     *         Data errors are reported in {@link OfflineDataUpload#partialDataErrors}
     *         
     *         <p><b>Note:</b> Supports only the {@code ADD} operator. {@code SET} operator is internally used
     *         only.({@code REMOVE} is not supported).
     *         
     *         @param operations A list of offline data upload operations.
     *         @return The list of offline data upload results in the same order as operations.
     *         @throws {@link ApiException} if problems occur.
     *       
     * 
     * @param operations
     * @return
     *     returns com.google.api.ads.adwords.jaxws.v201802.rm.OfflineDataUploadReturnValue
     * @throws ApiException
     */
    @WebMethod
    @WebResult(name = "rval", targetNamespace = "https://adwords.google.com/api/adwords/rm/v201802")
    @RequestWrapper(localName = "mutate", targetNamespace = "https://adwords.google.com/api/adwords/rm/v201802", className = "com.google.api.ads.adwords.jaxws.v201802.rm.OfflineDataUploadServiceInterfacemutate")
    @ResponseWrapper(localName = "mutateResponse", targetNamespace = "https://adwords.google.com/api/adwords/rm/v201802", className = "com.google.api.ads.adwords.jaxws.v201802.rm.OfflineDataUploadServiceInterfacemutateResponse")
    public OfflineDataUploadReturnValue mutate(
        @WebParam(name = "operations", targetNamespace = "https://adwords.google.com/api/adwords/rm/v201802")
        List<OfflineDataUploadOperation> operations)
        throws ApiException
    ;

}
